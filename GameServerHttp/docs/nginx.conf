# Nginx配置文件
worker_processes auto;
worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for" '
                   'rt=$request_time uct="$upstream_connect_time" '
                   'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # 基础优化配置
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # 缓冲区设置
    client_body_buffer_size 128k;
    client_max_body_size 10m;
    client_header_buffer_size 32k;
    large_client_header_buffers 4 32k;

    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml;

    # 限流配置
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/s;
    limit_req_zone $binary_remote_addr zone=game:10m rate=50r/s;
    limit_conn_zone $binary_remote_addr zone=conn:10m;

    # 上游服务器配置
    upstream user_backend {
        least_conn;
        server 127.0.0.1:8001 weight=3 max_fails=3 fail_timeout=30s;
        server 127.0.0.1:8002 weight=3 max_fails=3 fail_timeout=30s;
        server 127.0.0.1:8003 weight=2 max_fails=3 fail_timeout=30s backup;
        keepalive 32;
    }

    upstream third_backend {
        least_conn;
        server 127.0.0.1:8011 weight=3 max_fails=3 fail_timeout=30s;
        server 127.0.0.1:8012 weight=3 max_fails=3 fail_timeout=30s;
        server 127.0.0.1:8013 weight=2 max_fails=3 fail_timeout=30s backup;
        keepalive 32;
    }

    upstream game_backend {
        least_conn;
        server 127.0.0.1:8021 weight=3 max_fails=3 fail_timeout=30s;
        server 127.0.0.1:8022 weight=3 max_fails=3 fail_timeout=30s;
        server 127.0.0.1:8023 weight=3 max_fails=3 fail_timeout=30s;
        server 127.0.0.1:8024 weight=2 max_fails=3 fail_timeout=30s backup;
        keepalive 32;
    }

    # SSL配置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # HTTP服务器 (端口80)
    server {
        listen 80;
        server_name your-domain.com www.your-domain.com;

        # HTTP重定向到HTTPS (生产环境推荐)
        # return 301 https://$server_name$request_uri;

        # 或者直接处理HTTP请求
        location / {
            return 200 "HTTP Service Available";
            add_header Content-Type text/plain;
        }

        # 健康检查端点
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # HTTPS服务器 (端口443)
    server {
        listen 443 ssl http2;
        server_name your-domain.com www.your-domain.com;

        # SSL证书配置 (请替换为实际证书路径)
        ssl_certificate /etc/nginx/ssl/your-domain.crt;
        ssl_certificate_key /etc/nginx/ssl/your-domain.key;

        # 安全头部
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # 连接限制
        limit_conn conn 20;

        # 用户服务
        location /api/user/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://user_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 超时设置
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
            
            # 缓存控制
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            
            # HTTP版本和连接保持
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # 第三方服务
        location /api/third/ {
            limit_req zone=api burst=15 nodelay;
            
            proxy_pass http://third_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 15s;
            proxy_read_timeout 15s;
            
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # 游戏服务
        location /api/game/ {
            limit_req zone=game burst=30 nodelay;
            
            proxy_pass http://game_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 3s;
            proxy_send_timeout 20s;
            proxy_read_timeout 20s;
            
            proxy_buffering on;
            proxy_buffer_size 8k;
            proxy_buffers 16 8k;
            
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # 静态文件服务
        location /static/ {
            limit_req zone=general burst=100 nodelay;
            
            root /var/www/html;
            expires 30d;
            add_header Cache-Control "public, immutable";
            
            # 静态文件优化
            location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                access_log off;
            }
        }

        # API文档
        location /docs/ {
            limit_req zone=general burst=10 nodelay;
            
            root /var/www/html;
            try_files $uri $uri/ =404;
        }

        # 健康检查
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # 状态监控 (仅内网访问)
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }

        # 默认拒绝
        location / {
            limit_req zone=general burst=5 nodelay;
            return 404;
        }
    }

    # 默认服务器 (安全配置)
    server {
        listen 80 default_server;
        listen 443 ssl default_server;
        server_name _;
        
        ssl_certificate /etc/nginx/ssl/default.crt;
        ssl_certificate_key /etc/nginx/ssl/default.key;
        
        return 444;
    }
}